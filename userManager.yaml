---
- name: Managing users for ethenhunt
  hosts: ethenhunt
  vars:
    servers_to_monitor: "{{ groups['ethenhunt'] }}"
  tasks:
    - name: Validating if able to access group vars
      debug:
        msg: "Cloning codebase at {{ company_repo_location }} from {{ item }}"
      with_items:
        "{{ company_repos }}"
    # - user:
    #     name: "{{ username }}"
    #     shell: /bin/bash
    #     generate_ssh_key: true
    #     state: present
    # - name: Get user Public file
    #   fetch:
    #     src: "/home/{{ username }}/.ssh/id_rsa.pub"
    #     dest: "/tmp/ethenhunt/{{ inventory_hostname }}.pub"
    #     flat: yes
    # - user:
    #     name: "{{ adminuser }}"
    #     shell: /bin/bash
    #     generate_ssh_key: true
    #     state: present
    # - template:
    #     src: "./config.j2"
    #     dest: "/home/{{ username }}/.ssh/config"
    #     owner: "{{ username }}"
    #     mode: 0600
    # - name: Set authorized key for all the users of group
    #   authorized_key:
    #     user: "{{ username }}"
    #     state: present
    #     key: "{{ lookup('file', '/tmp/ethenhunt/{{item}}.pub') }}"
    #   with_items:
    #     "{{ servers_to_monitor }}"



# - name: Managing users for Dev Ninja
#   hosts: devninja
#   vars:
#     servers_to_monitor: "{{ groups['devninja'] }}"
#   tasks:
#     - user:
#         name: "{{ username }}"
#         shell: /bin/bash
#         generate_ssh_key: true
#         state: present
#     - user:
#         name: "{{ adminuser }}"
#         shell: /bin/bash
#         generate_ssh_key: true
#         state: present
#     - template:
#         src: "./config.j2"
#         dest: "/home/{{ username }}/.ssh/config"
#         owner: "{{ username }}"
#         mode: 0600